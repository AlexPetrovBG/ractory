"""fix_updated_at_fields

Revision ID: f570b9d188e5
Revises: 6739ad986e80
Create Date: 2025-05-02 08:53:24.116146

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f570b9d188e5'
down_revision = '6739ad986e80'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Create the enum type first
    op.execute("CREATE TYPE workflowactiontype AS ENUM ('BarcodeScan', 'PieceCut', 'AssemblyWeld', 'QualityCheck', 'Packaging', 'Shipping', 'MaterialRequest', 'MaterialReceived', 'WorkstationLogin', 'WorkstationLogout', 'ErrorReport', 'MaintenanceRequest', 'SystemEvent')")
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('api_keys', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('articles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('assemblies', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('components', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('pieces', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('ui_templates', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('ui_templates', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('workflow', 'action_type',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('BarcodeScan', 'PieceCut', 'AssemblyWeld', 'QualityCheck', 'Packaging', 'Shipping', 'MaterialRequest', 'MaterialReceived', 'WorkstationLogin', 'WorkstationLogout', 'ErrorReport', 'MaintenanceRequest', 'SystemEvent', name='workflowactiontype'),
               existing_nullable=False,
               postgresql_using='action_type::workflowactiontype')
    op.alter_column('workstations', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('workstations', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('workflow', 'action_type',
               existing_type=sa.Enum('BarcodeScan', 'PieceCut', 'AssemblyWeld', 'QualityCheck', 'Packaging', 'Shipping', 'MaterialRequest', 'MaterialReceived', 'WorkstationLogin', 'WorkstationLogout', 'ErrorReport', 'MaintenanceRequest', 'SystemEvent', name='workflowactiontype'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('ui_templates', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('ui_templates', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('pieces', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('components', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('assemblies', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('articles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('api_keys', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    
    # Drop the enum type
    op.execute("DROP TYPE workflowactiontype")
    # ### end Alembic commands ### 