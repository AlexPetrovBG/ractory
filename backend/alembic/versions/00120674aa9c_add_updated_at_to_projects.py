"""add updated_at to projects

Revision ID: 00120674aa9c
Revises: 92cb5fead847
Create Date: 2025-04-28 14:28:14.595379

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '00120674aa9c'
down_revision = '92cb5fead847'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('api_keys', sa.Column('guid', sa.UUID(), nullable=False))
    op.add_column('api_keys', sa.Column('description', sa.String(), nullable=True))
    op.add_column('api_keys', sa.Column('scopes', sa.String(), nullable=True))
    op.add_column('api_keys', sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True))
    op.create_unique_constraint(None, 'api_keys', ['key_hash'])
    op.drop_column('api_keys', 'last_used')
    op.drop_column('api_keys', 'updated_at')
    op.drop_column('api_keys', 'id')
    op.drop_column('api_keys', 'scope')
    op.add_column('articles', sa.Column('modified_date', sa.DateTime(timezone=True), nullable=True))
    op.drop_column('articles', 'updated_at')
    op.drop_column('assemblies', 'updated_at')
    op.alter_column('companies', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('companies', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False)
    op.create_index(op.f('ix_companies_name'), 'companies', ['name'], unique=False)
    op.drop_column('components', 'updated_at')
    op.drop_column('pieces', 'updated_at')
    op.alter_column('ui_templates', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('ui_templates', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_column('users', 'updated_at')
    op.alter_column('workstations', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('workstations', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('workstations', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.alter_column('workstations', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.alter_column('ui_templates', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('ui_templates', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.add_column('pieces', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('components', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_companies_name'), table_name='companies')
    op.alter_column('companies', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('companies', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.add_column('assemblies', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('articles', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_column('articles', 'modified_date')
    op.add_column('api_keys', sa.Column('scope', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('api_keys', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('api_keys', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('api_keys', sa.Column('last_used', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'api_keys', type_='unique')
    op.drop_column('api_keys', 'last_used_at')
    op.drop_column('api_keys', 'scopes')
    op.drop_column('api_keys', 'description')
    op.drop_column('api_keys', 'guid')
    # ### end Alembic commands ### 