from pydantic import BaseModel, Field
from typing import List, Optional
from uuid import UUID
from datetime import datetime

# Placeholder Schemas (Based on RaConnectDBSchema.md assumption)
# These would need to be fully defined based on the actual RaWorkshop schema.

class ProjectCreate(BaseModel):
    id: int = Field(..., description="Primary key from RaWorkshop")
    code: str = Field(..., description="Project code identifier")
    creation_date: Optional[datetime] = Field(None, description="When the project was created")
    modified_date: Optional[datetime] = Field(None, description="When the project was last modified")
    due_date: Optional[datetime] = Field(None, description="Project deadline")
    check_sum: Optional[str] = Field(None, description="Validation checksum")
    in_production: Optional[bool] = Field(None, description="Flag indicating if project is in production")
    company_name: Optional[str] = Field(None, description="Name of the company associated with the project")
    company_guid: Optional[UUID] = Field(None, description="Global unique identifier for the company")

class ComponentCreate(BaseModel):
    id: int = Field(..., description="Primary key from RaWorkshop")
    code: str = Field(..., description="Component code identifier")
    designation: Optional[str] = Field(None, description="Name or description of the component")
    id_project: int = Field(..., description="Foreign key to Projects.Id")
    quantity: Optional[int] = Field(None, description="Number of components")
    picture: Optional[bytes] = Field(None, description="Visual representation of the component")
    created_date: Optional[datetime] = Field(None, description="When the component was created")
    company_guid: Optional[UUID] = Field(None, description="Global unique identifier for the company")

class AssemblyCreate(BaseModel):
    id: int = Field(..., description="Primary key from RaWorkshop")
    id_project: int = Field(..., description="Foreign key to Projects.Id")
    id_component: int = Field(..., description="Foreign key to Components.Id")
    trolley_cell: Optional[str] = Field(None, description="Identifies the trolley and cell position")
    trolley: Optional[str] = Field(None, description="Identifies the trolley")
    cell_number: Optional[int] = Field(None, description="Cell number within the trolley")
    picture: Optional[bytes] = Field(None, description="Visual representation of the assembly")
    company_guid: Optional[UUID] = Field(None, description="Global unique identifier for the company")

class ArticleCreate(BaseModel):
    id: int = Field(..., description="Primary key from RaWorkshop")
    code: str = Field(..., description="Article code identifier")
    designation: Optional[str] = Field(None, description="Name or description of the article")
    consume_group_designation: Optional[str] = Field(None, description="Designation of the consumption group")
    consume_group_priority: Optional[int] = Field(None, description="Priority within the consumption group")
    quantity: Optional[float] = Field(None, description="Quantity of articles")
    unit: Optional[str] = Field(None, description="Unit of measurement")
    category_designation: Optional[str] = Field(None, description="Category of the article")
    position: Optional[str] = Field(None, description="Position information")
    short_position: Optional[str] = Field(None, description="Abbreviated position information")
    code_no_color: Optional[str] = Field(None, description="Code without color information")
    component_code: Optional[str] = Field(None, description="Code of the related component")
    is_extra: Optional[bool] = Field(None, description="Flag indicating if this is an extra article")
    length: Optional[float] = Field(None, description="Length measurement")
    width: Optional[float] = Field(None, description="Width measurement")
    height: Optional[float] = Field(None, description="Height measurement")
    surface: Optional[float] = Field(None, description="Surface area")
    angle1: Optional[float] = Field(None, description="First angle measurement")
    angle2: Optional[float] = Field(None, description="Second angle measurement")
    unit_weight: Optional[float] = Field(None, description="Weight per unit")
    bar_length: Optional[float] = Field(None, description="Length of bar")
    id_project: Optional[int] = Field(None, description="Foreign key to Projects.Id")
    id_component: Optional[int] = Field(None, description="Foreign key to Components.Id")
    created_date: Optional[datetime] = Field(None, description="When the article was created")
    modified_date: Optional[datetime] = Field(None, description="When the article was last modified")
    company_guid: Optional[UUID] = Field(None, description="Global unique identifier for the company")

# Detailed Schema based on api-guide.mdc example
class PieceCreate(BaseModel):
    id: int = Field(..., description="Primary key from RaWorkshop")
    piece_id: Optional[str] = Field(None, description="Unique identifier for the piece")
    outer_length: Optional[int] = Field(None, description="Outer length dimension")
    angle_left: Optional[int] = Field(None, description="Left angle measurement")
    angle_right: Optional[int] = Field(None, description="Right angle measurement")
    orientation: Optional[str] = Field(None, description="Orientation of the piece")
    barcode: Optional[str] = Field(None, description="Barcode identifier for tracking")
    assembly_width: Optional[int] = Field(None, description="Width when assembled")
    assembly_height: Optional[int] = Field(None, description="Height when assembled")
    trolley: Optional[str] = Field(None, description="Trolley identifier")
    cell: Optional[str] = Field(None, description="Cell identifier")
    trolley_cell: Optional[str] = Field(None, description="Combined trolley and cell reference")
    operations: Optional[str] = Field(None, description="Operations to perform on the piece")
    component_code: Optional[str] = Field(None, description="Code of the component this piece belongs to")
    component_description: Optional[str] = Field(None, description="Description of the component")
    info2: Optional[str] = Field(None, description="Additional information field 2")
    info3: Optional[str] = Field(None, description="Additional information field 3")
    client: Optional[str] = Field(None, description="Client information")
    dealer: Optional[str] = Field(None, description="Dealer information")
    project_description: Optional[str] = Field(None, description="Description of the associated project")
    inner_length: Optional[int] = Field(None, description="Inner length dimension")
    reinforcement_code: Optional[str] = Field(None, description="Code for reinforcement material")
    reinforcement_length: Optional[int] = Field(None, description="Length of reinforcement")
    hardware_info: Optional[str] = Field(None, description="Information about hardware components")
    glass_info: Optional[str] = Field(None, description="Information about glass components")
    other_length: Optional[int] = Field(None, description="Additional length measurement")
    project_number: Optional[str] = Field(None, description="Project number reference")
    component_number: Optional[str] = Field(None, description="Component number reference")
    water_handle: Optional[str] = Field(None, description="Water handle information")
    segment_order: Optional[str] = Field(None, description="Order of segments")
    cutting_pattern: Optional[str] = Field(None, description="Pattern used for cutting")
    fixing_mode: Optional[str] = Field(None, description="Method of fixing/mounting")
    material_type: Optional[str] = Field(None, description="Type of material")
    project_code_parrent: Optional[str] = Field(None, description="Parent project code")
    bar_id: Optional[str] = Field(None, description="Bar identifier")
    bar_rest: Optional[int] = Field(None, description="Remaining bar material")
    bar_length: Optional[int] = Field(None, description="Length of bar")
    bar_cutting_tolerance: Optional[int] = Field(None, description="Tolerance for cutting bars")
    profile_code: Optional[str] = Field(None, description="Code for the profile")
    profile_name: Optional[str] = Field(None, description="Name of the profile")
    lamination: Optional[str] = Field(None, description="Lamination information")
    gasket: Optional[str] = Field(None, description="Gasket information")
    profile_width: Optional[int] = Field(None, description="Width of the profile")
    profile_height: Optional[int] = Field(None, description="Height of the profile")
    welding_tolerance: Optional[int] = Field(None, description="Tolerance for welding")
    profile_color: Optional[str] = Field(None, description="Color of the profile")
    profile_type_ra: Optional[str] = Field(None, description="Type of profile (Ra specific)")
    profile_type: Optional[str] = Field(None, description="General type of profile")
    trolley_size: Optional[str] = Field(None, description="Size of the trolley")
    profile_code_with_color: Optional[str] = Field(None, description="Profile code including color information")
    id_project: int = Field(..., description="Foreign key to Projects.Id")
    id_component: int = Field(..., description="Foreign key to Components.Id")
    id_assembly: int = Field(..., description="Foreign key to Assemblies.Id")
    created_date: Optional[datetime] = Field(None, description="When the piece was created")
    parent_assembly_trolley_cell: Optional[str] = Field(None, description="Trolley cell of parent assembly")
    mullion_trolley_cell: Optional[str] = Field(None, description="Trolley cell for mullion")
    glazing_bead_trolley_cell: Optional[str] = Field(None, description="Trolley cell for glazing bead")
    picture: Optional[bytes] = Field(None, description="Visual representation of the piece")
    project_phase: Optional[str] = Field(None, description="Current phase of the project")
    company_guid: Optional[UUID] = Field(None, description="Global unique identifier for the company")

class SyncResponse(BaseModel):
    inserted: int
    updated: int 