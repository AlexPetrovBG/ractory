services:
  # Backend services
  api:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - SQLALCHEMY_DATABASE_URL=${SQLALCHEMY_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db_dev
    profiles: ["dev"]
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
  
  api_prod:
    image: prod-api:latest
    depends_on:
      - db_prod
    networks:
      - prod_default
    profiles: ["prod"]
    # Production config is managed in prod/docker-compose.yml
    
  # Database services - Separated by environment
  db_dev:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DEV_DB_NAME}
      - POSTGRES_USER=${DEV_DB_USER}
      - POSTGRES_PASSWORD=${DEV_DB_PASS}
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rafactory_rw -d rafactory_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles: ["dev"]
  
  db_prod:
    image: postgres:15-alpine
    networks:
      - prod_default
    profiles: ["prod"]
    # Production DB is managed in prod/docker-compose.yml
    
volumes:
  pgdata_dev:

networks:
  prod_default:
    external: true
    name: prod_default 