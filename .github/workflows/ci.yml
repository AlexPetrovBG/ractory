name: Ra Factory CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-backend:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.11"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
          
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics
          
      - name: Run tests
        run: |
          pytest backend/tests/
          
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.repository }}/api:${{ github.sha }}
          
  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Build admin frontend
        run: |
          cd frontend/admin
          npm ci
          npm run build
          
      - name: Build operator frontend
        run: |
          cd frontend/operator
          npm ci
          npm run build
          
      - name: Build and push frontend images
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/admin:${{ github.sha }}
            ghcr.io/${{ github.repository }}/operator:${{ github.sha }}
            
  deploy:
    needs: [build-backend, build-frontend]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/apps/ractory/prod
            git pull
            
            # Deploy to production only
            docker compose pull
            docker compose up -d --remove-orphans 